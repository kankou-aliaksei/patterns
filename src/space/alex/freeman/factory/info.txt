Вызов: При программировании на уровне реализации появляется проблема сильного связывания (toughly coupling).
Код становится fragile (хрупким, неустойчивым к изменениям) и меннее гибким less flexible.

Инкапсулирует создание объектов конкретных типов.

Выгода:
1. Создание можно переиспользовать в разных клиентах.
2. Изменения нужно производить только в одном месте.

---------------------------
- Принципы проектирования -
---------------------------

The dependency inversion principle. Принцип инверсии зависимостей.
Код должен зависеть от абстракций, а не от конкретных классов.
Высокоуровневые компоненты не должны зависеть от низкоуровневых, а должны зависеть от абстракции.

-----------------------------
- Дополнительная информация -
-----------------------------

- Инвертирование направления мысли. Вместо того, чтобы начинать сверху, начнем с разных конкретных низкоуровневых
деталей (компонентов) и подумаем, что из них можно абстрагировать.
